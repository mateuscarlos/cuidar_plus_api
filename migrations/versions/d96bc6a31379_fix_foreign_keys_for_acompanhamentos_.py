"""Fix foreign keys for acompanhamentos table

Revision ID: d96bc6a31379
Revises: 86ecc9c2a383
Create Date: 2025-03-18 17:45:25.263220

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'd96bc6a31379'
down_revision = '86ecc9c2a383'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index('cpf')
        batch_op.drop_index('email')

    # Drop existing foreign keys if they exist
    # Since MySQL syntax might differ from other databases, we'll use a try-except block
    try:
        op.drop_constraint('acompanhamentos_usuario_id_fkey', 'acompanhamentos', type_='foreignkey')
    except:
        pass  # Constraint might not exist or have a different name
    
    # Re-create the correct foreign key constraint
    op.create_foreign_key(
        'fk_acompanhamentos_user',
        'acompanhamentos',
        'user',  # Target table
        ['usuario_id'],  # Source column
        ['id'],  # Target column
        onupdate='CASCADE',
        ondelete='CASCADE'
    )
    
    # The paciente_id foreign key looks correct in your model,
    # but if you also need to fix it, you can do similarly:
    try:
        op.drop_constraint('acompanhamentos_paciente_id_fkey', 'acompanhamentos', type_='foreignkey')
    except:
        pass
    
    op.create_foreign_key(
        'fk_acompanhamentos_paciente',
        'acompanhamentos',
        'paciente',  # Target table
        ['paciente_id'],  # Source column
        ['id'],  # Target column
        onupdate='CASCADE',
        ondelete='CASCADE'
    )

    op.drop_table('users')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.alter_column('nome',
               existing_type=mysql.VARCHAR(length=120),
               type_=sa.String(length=100),
               existing_nullable=False)
        batch_op.alter_column('email',
               existing_type=mysql.VARCHAR(length=120),
               type_=sa.String(length=100),
               nullable=True)
        batch_op.alter_column('cep',
               existing_type=mysql.VARCHAR(length=8),
               nullable=True)
        batch_op.alter_column('bairro',
               existing_type=mysql.VARCHAR(length=50),
               nullable=True)
        batch_op.alter_column('cidade',
               existing_type=mysql.VARCHAR(length=50),
               nullable=True)
        batch_op.alter_column('estado',
               existing_type=mysql.VARCHAR(length=2),
               nullable=True)
        batch_op.alter_column('setor',
               existing_type=mysql.VARCHAR(length=50),
               nullable=False)
        batch_op.alter_column('funcao',
               existing_type=mysql.VARCHAR(length=50),
               nullable=False)
        batch_op.alter_column('registro_categoria',
               existing_type=mysql.VARCHAR(length=50),
               type_=sa.String(length=20),
               existing_nullable=True)
        batch_op.alter_column('telefone',
               existing_type=mysql.VARCHAR(length=15),
               type_=sa.String(length=20),
               existing_nullable=True)
        batch_op.alter_column('password_hash',
               existing_type=mysql.VARCHAR(length=255),
               type_=sa.String(length=128),
               nullable=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('password_hash',
               existing_type=sa.String(length=128),
               type_=mysql.VARCHAR(length=255),
               nullable=False)
        batch_op.alter_column('telefone',
               existing_type=sa.String(length=20),
               type_=mysql.VARCHAR(length=15),
               existing_nullable=True)
        batch_op.alter_column('registro_categoria',
               existing_type=sa.String(length=20),
               type_=mysql.VARCHAR(length=50),
               existing_nullable=True)
        batch_op.alter_column('funcao',
               existing_type=mysql.VARCHAR(length=50),
               nullable=True)
        batch_op.alter_column('setor',
               existing_type=mysql.VARCHAR(length=50),
               nullable=True)
        batch_op.alter_column('estado',
               existing_type=mysql.VARCHAR(length=2),
               nullable=False)
        batch_op.alter_column('cidade',
               existing_type=mysql.VARCHAR(length=50),
               nullable=False)
        batch_op.alter_column('bairro',
               existing_type=mysql.VARCHAR(length=50),
               nullable=False)
        batch_op.alter_column('cep',
               existing_type=mysql.VARCHAR(length=8),
               nullable=False)
        batch_op.alter_column('email',
               existing_type=sa.String(length=100),
               type_=mysql.VARCHAR(length=120),
               nullable=False)
        batch_op.alter_column('nome',
               existing_type=sa.String(length=100),
               type_=mysql.VARCHAR(length=120),
               existing_nullable=False)
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')

    op.create_table('users',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nome', mysql.VARCHAR(length=100), nullable=False),
    sa.Column('email', mysql.VARCHAR(length=100), nullable=True),
    sa.Column('cpf', mysql.VARCHAR(length=11), nullable=False),
    sa.Column('rua', mysql.VARCHAR(length=100), nullable=True),
    sa.Column('numero', mysql.VARCHAR(length=10), nullable=True),
    sa.Column('complemento', mysql.VARCHAR(length=50), nullable=True),
    sa.Column('cep', mysql.VARCHAR(length=8), nullable=True),
    sa.Column('bairro', mysql.VARCHAR(length=50), nullable=True),
    sa.Column('cidade', mysql.VARCHAR(length=50), nullable=True),
    sa.Column('estado', mysql.VARCHAR(length=2), nullable=True),
    sa.Column('setor', mysql.VARCHAR(length=50), nullable=False),
    sa.Column('funcao', mysql.VARCHAR(length=50), nullable=False),
    sa.Column('especialidade', mysql.VARCHAR(length=50), nullable=True),
    sa.Column('registro_categoria', mysql.VARCHAR(length=20), nullable=True),
    sa.Column('telefone', mysql.VARCHAR(length=20), nullable=True),
    sa.Column('data_admissao', sa.DATE(), nullable=True),
    sa.Column('status', mysql.VARCHAR(length=20), nullable=True),
    sa.Column('tipo_acesso', mysql.VARCHAR(length=20), nullable=True),
    sa.Column('password_hash', mysql.VARCHAR(length=128), nullable=True),
    sa.Column('created_at', mysql.DATETIME(), nullable=True),
    sa.Column('updated_at', mysql.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index('email', ['email'], unique=True)
        batch_op.create_index('cpf', ['cpf'], unique=True)

    # ### end Alembic commands ###
